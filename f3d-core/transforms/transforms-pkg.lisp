(in-package :cl-user)

(defpackage :transforms (:use :common-lisp :lcl :lx :common-symbols :math)
	    ;;(:import-from :common-symbols "TRANSFORM-MATRIX")
	    ;;(:import-from :lx "OBJECT-TO-WORLD-MATRIX")
	    (:import-from :math "INLINE-SET-COORDINATE-VECTOR-ELEMENTS" ) 
	    (:export
	     "DECOMPOSE-PROJECTION-MATRIX"
	     "COORDINATE-TRANSFORM" "COORDINATE-PROJECTION" "SURROGATE-PROJECTION"
	     "BIND-VECTOR-ELEMENTS" "MAKE-COORDINATE-VECTOR" "CV"
	     "COORDINATE-VECTOR-ELEMENTS"
	     "SET-COORDINATE-VECTOR-ELEMENTS"
	     "TRANSFORM-VECTOR" "INVERSE-TRANSFORM" "INVERSE-TRANSFORM-VECTOR"
	     "CONNECT-TRANSFORMS"
	     "INTERSECT-CAMERA-RAY-WITH-Z-PLANE" "INTERSECT-CAMERA-RAY-WITH-PLANE"
	     "PROJECT-2D-MOTION-TO-3D-MOTION"
	     "TRANSFORM-SCALE-FACTOR"
	     "CAMERA-DIRECTION-VECTOR" "TRANSFORM-DIRECTION-VECTOR"

	     "SET-TRANSFORM-COORDINATE-SYSTEMS"
	     
	     "COMPUTE-GSD" "TRANSFORM-JACOBIAN"

	     "MAKE-INT-VECTOR" "MAKE-4X4-MATRIX" "MAKE-4X4-COORDINATE-TRANSFORM"
	     "MAKE-COORDINATE-SYSTEM"
	     
	     "TRANSFORM-MATRIX" "SET-TRANSFORM-MATRIX"

	     "MAKE-FRAME-CAMERA-FROM-MATRICES" "MAKE-CAMERA-TO-2D-MATRIX"
	     
	     ;;"MAKE-COORD-FRAME" "MAKE-COORD-FRAME-MATRIX" 
	     ;;"MAKE-COORDINATE-TRANSFORM" "MAKE-SCALED-COORD-FRAME"

	     "SET-PARENT-TRANSFORM" "ADD-CHILD" "REMOVE-CHILD"
	     
	     "LONGITUDE-TO-UTM-ZONE" "CENTRAL-MERIDIAN-FROM-UTM-ZONE"

	     "4X4-COORDINATE-TRANSFORM" "4X4-COORDINATE-TRANSFORM-TRANSFORM-VECTOR" "BASIC-4X4-TRANSFORM"
	     "GET-COORDINATE-SYSTEM-NAMED"
	     "GEOGRAPHIC-TRANSFORM-ALIST"
	     "REGISTER-GEOGRAPHIC-TRANSFORM"
	     "ELLIPSOID" "TO-GEOCENTRIC-TRANSFORM" "TO-LAT-LONG-TRANSFORM"
	     "FIND-GEOGRAPHIC-TRANSFORM"
	     "FIND-GEOGRAPHIC-TRANSFORM-OF-CLASS"
	     "REGISTER-DEFAULT-COORDINATE-SYSTEMS"
	     "MAKE-LVCS-TO-GEOCENTRIC-TRANSFORM"
	     "LVCS-COORDINATE-SYSTEM"  
	     "CARTESIAN-COORDINATE-SYSTEM" "2D-CARTESIAN-COORDINATE-SYSTEM" "3D-CARTESIAN-COORDINATE-SYSTEM"
	     "MAKE-TRANSFORM-PATH" ;;"FIND-TRANSFORM-TO"
	     
	     "FROM-COORDINATE-SYSTEM" "TO-COORDINATE-SYSTEM"
	     "LVCS-TO-UTM-TRANSFORM" "LVCS-TO-LAT-LONG-TRANSFORM"
	     "MAKE-UTM-COORDINATE-SYSTEM" "MAKE-LAT-LONG-TO-UTM-TRANSFORM"
	     "COMPOSE-TRANSFORMS" "MAKE-COMPOSITE-COORDINATE-TRANSFORM"

	     "COMPOSITE-COORDINATE-TRANSFORM" "COMPOSITE-COORDINATE-PROJECTION"

	     "MAKE-COMPOSITE-COORDINATE-PROJECTION"

	     "COMPOSITE-COORDINATE-PROJECTION-SIMPLE-PROJECTION"

	     "CHANGE-AZIMUTH-ELEVATION-RELATIVE-TO-POSITION"
	     
	     "MOVE-BY"
	     "TRANSFORM-WINDOW-MOTION-TO-2D-WORLD-MOTION"
	     "ROTATE-RELATIVE-TO-WORLD-BY" "ROTATE-BY"
	     "PRE-MULTIPLY-TRANSFORM-MATRIX" "POST-MULTIPLY-TRANSFORM-MATRIX"
	     "ROLLING-BALL-ROTATION-MATRIX"

	     "*FEET-PER-METER*" "FROM-DEG-MIN-SEC" "TO-DEG-MIN-SEC"

	     "MAKE-PERSPECTIVE-TRANSFORM"

	     "GET-GDC" "GET-GCC" "MAKE-LVCS" "GET-ELLIPSOID"

	     "LVCS" "LOCAL-VERTICAL-COORDINATE-SYSTEM" "GDC"
	     "CANONICAL-COORDINATE-TRANSFORM-PATH" "TRANSFORM-PATH" 
	     "CS-TO-CS-TRANSFORM" "CACHED-CS-TO-CS-TRANSFORM" "CACHED-OPTIMIZED-CS-TO-CS-TRANSFORM"
	     "CS-TO-CS-TRANSFORM-MATRIX" "CACHED-CS-TO-CS-TRANSFORM-MATRIX"
	     "CS-TO-SUPERIOR-CS-TRANSFORM"


	     ;;"INTERSECT-CAMERA-RAY-WITH-TERRAIN-MODEL"

	     "TRANSFORM-BOUNDING-BOX"

	     "MAP-OVER-CHILDREN" "LOCAL-UNITS-PER-METER"
	     )
	    
	    )

#+never
(eval-when (eval load compile)
  (import '(math::DECOMPOSE-PROJECTION-MATRIX)
	  :transforms)
  (export '(transforms::DECOMPOSE-PROJECTION-MATRIX)
	  :transforms)
  )
